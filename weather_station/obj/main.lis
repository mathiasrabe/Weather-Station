                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATHIA~1\DOCUME~1\PSOCDE~1.2PR\WEATHE~1\WEATHE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;  lcdSecondLine -> X+18
 0000           ;   lcdFirstLine -> X+2
 0000           ;    displaymode -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3822              add SP,34
 0004                   .dbline 35
 0004           ; //----------------------------------------------------------------------------
 0004           ; // Ports:
 0004           ; // P0_0 = MCLK
 0004           ; // P0_1 = XCLR adc reset
 0004           ; // P0_2 = Button SW
 0004           ; // P0_3 = windspeed input
 0004           ; // P0_4 = sunlight (solar) input
 0004           ; // P0_5 = rainsensor input
 0004           ; // P0_6 = I2C SDA
 0004           ; // P0_7 = I2C SCL
 0004           ; // P1_0 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P2 = LCD
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #define LCD_LENGTH 16 // 16 plus \0 termination?
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; #include "sunsensor.h"
 0004           ; #include "windspeed.h"
 0004           ; /*
 0004           ; typedef enum {
 0004           ;       overview = 0,
 0004           ;       temp = 1,
 0004           ;       humidity = 2,
 0004           ;       rain = 3,
 0004           ;       wind = 4,
 0004           ; } MODE;*/
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 38
 0004           ;       //Variables
 0004           ;       char lcdFirstLine[LCD_LENGTH], lcdSecondLine[LCD_LENGTH];
 0004           ;       unsigned int displaymode = 4; // FIXME: sollte 0 sein!
 0004 560104            mov [X+1],4
 0007 560000            mov [X+0],0
 000A                   .dbline 43
 000A           ;       
 000A           ;       /** init **/
 000A           ;       
 000A           ;       // interrupt and SleepTimer init
 000A           ;       M8C_EnableGInt ;                            // Turn on interrupts
 000A 7101                      or  F, 01h
 000C           
 000C                   .dbline 44
 000C           ;       SleepTimer_Start();
 000C 10                push X
 000D 7C0000            xcall _SleepTimer_Start
 0010                   .dbline 45
 0010           ;       SleepTimer_SetInterval(SleepTimer_8_HZ);    // Set interrupt to a
 0010 5010              mov A,16
 0012 7C0000            xcall _SleepTimer_SetInterval
 0015                   .dbline 46
 0015           ;       SleepTimer_EnableInt();                     // 8 Hz rate
 0015 7C0000            xcall _SleepTimer_EnableInt
 0018                   .dbline 49
 0018           ;       
 0018           ;       // init PGA and SAR6 for sun and rain sensor
 0018           ;       PGA_sun_SetGain(PGA_sun_G5_33);  // gain of 5,33
 0018 5028              mov A,40
 001A 7C0000            xcall _PGA_sun_SetGain
 001D                   .dbline 50
 001D           ;       PGA_sun_Start(PGA_sun_HIGHPOWER);
 001D 5003              mov A,3
 001F 7C0000            xcall _PGA_sun_Start
 0022                   .dbline 51
 0022           ;       SAR6_sun_Start(SAR6_sun_HIGHPOWER);
 0022 5003              mov A,3
 0024 7C0000            xcall _SAR6_sun_Start
 0027                   .dbline 54
 0027           ;       
 0027           ;       // init PGA and SAR6 for windsensor
 0027           ;       PGA_wind_SetGain(PGA_wind_G5_33);  // gain of 5,33
 0027 5028              mov A,40
 0029 7C0000            xcall _PGA_wind_SetGain
 002C                   .dbline 55
 002C           ;       PGA_wind_Start(PGA_wind_HIGHPOWER);
 002C 5003              mov A,3
 002E 7C0000            xcall _PGA_wind_Start
 0031                   .dbline 56
 0031           ;       SAR6_wind_Start(SAR6_wind_HIGHPOWER);
 0031 5003              mov A,3
 0033 7C0000            xcall _SAR6_wind_Start
 0036                   .dbline 59
 0036           ; 
 0036           ;       // LCD init
 0036           ;       LCD_Init();
 0036 7C0000            xcall _LCD_Init
 0039 20                pop X
 003A                   .dbline 62
 003A           ;       
 003A           ;       // print welcome screen to LCD
 003A           ;       csprintf(lcdFirstLine,"   Welcome to   ");
 003A 5033              mov A,>L2
 003C 08                push A
 003D 5033              mov A,<L2
 003F 08                push A
 0040 5A00              mov [__r1],X
 0042 060002            add [__r1],2
 0045 5100              mov A,[__r0]
 0047 08                push A
 0048 5100              mov A,[__r1]
 004A 08                push A
 004B 7C0000            xcall _csprintf
 004E                   .dbline 63
 004E           ;       csprintf(lcdSecondLine, " Weatherstation ");
 004E 5022              mov A,>L3
 0050 08                push A
 0051 5022              mov A,<L3
 0053 08                push A
 0054 5A00              mov [__r1],X
 0056 060012            add [__r1],18
 0059 5100              mov A,[__r0]
 005B 08                push A
 005C 5100              mov A,[__r1]
 005E 08                push A
 005F 7C0000            xcall _csprintf
 0062 38F8              add SP,-8
 0064                   .dbline 64
 0064           ;       LCD_Position(0,0);
 0064 10                push X
 0065 5000              mov A,0
 0067 5700              mov X,0
 0069 7C0000            xcall _LCD_Position
 006C 20                pop X
 006D                   .dbline 65
 006D           ;       LCD_PrString(lcdFirstLine);
 006D 5A00              mov [__r1],X
 006F 060002            add [__r1],2
 0072 10                push X
 0073 5100              mov A,[__r0]
 0075 08                push A
 0076 5100              mov A,[__r1]
 0078 5C                mov X,A
 0079 18                pop A
 007A 7C0000            xcall _LCD_PrString
 007D                   .dbline 66
 007D           ;       LCD_Position(1,0);
 007D 5700              mov X,0
 007F 5001              mov A,1
 0081 7C0000            xcall _LCD_Position
 0084 20                pop X
 0085                   .dbline 67
 0085           ;       LCD_PrString(lcdSecondLine);
 0085 5A00              mov [__r1],X
 0087 060012            add [__r1],18
 008A 10                push X
 008B 5100              mov A,[__r0]
 008D 08                push A
 008E 5100              mov A,[__r1]
 0090 5C                mov X,A
 0091 18                pop A
 0092 7C0000            xcall _LCD_PrString
 0095 20                pop X
 0096 80D8              xjmp L5
 0098           L4:
 0098                   .dbline 69
 0098           ;       
 0098           ;       while(1) {
 0098                   .dbline 72
 0098           ;               // get temp and humidity here
 0098           ;               
 0098           ;               switch(displaymode) {
 0098 3D0000            cmp [X+0],0
 009B B006              jnz X1
 009D 3D0100            cmp [X+1],0
 00A0 A095              jz L8
 00A2           X1:
 00A2 3D0000            cmp [X+0],0
 00A5 B006              jnz X2
 00A7 3D0101            cmp [X+1],1
 00AA A08B              jz L8
 00AC           X2:
 00AC 3D0000            cmp [X+0],0
 00AF B006              jnz X3
 00B1 3D0102            cmp [X+1],2
 00B4 A081              jz L8
 00B6           X3:
 00B6 3D0000            cmp [X+0],0
 00B9 B006              jnz X4
 00BB 3D0103            cmp [X+1],3
 00BE A00D              jz L12
 00C0           X4:
 00C0 3D0000            cmp [X+0],0
 00C3 B006              jnz X5
 00C5 3D0104            cmp [X+1],4
 00C8 A020              jz L13
 00CA           X5:
 00CA 803B              xjmp L7
 00CC           L12:
 00CC                   .dbline 86
 00CC           ;                       case 0:
 00CC           ;                               // overview();
 00CC           ;                               break;
 00CC           ;                               
 00CC           ;                       case 1:
 00CC           ;                               // temp();
 00CC           ;                               break;
 00CC           ;                               
 00CC           ;                       case 2:
 00CC           ;                               // humidity();
 00CC           ;                               break;
 00CC           ;                               
 00CC           ;                       case 3:
 00CC           ;                               sunsensor(lcdFirstLine, lcdSecondLine);
 00CC 5A00              mov [__r1],X
 00CE 060012            add [__r1],18
 00D1 5100              mov A,[__r0]
 00D3 08                push A
 00D4 5100              mov A,[__r1]
 00D6 08                push A
 00D7 5A00              mov [__r1],X
 00D9 060002            add [__r1],2
 00DC 5100              mov A,[__r0]
 00DE 08                push A
 00DF 5100              mov A,[__r1]
 00E1 08                push A
 00E2 7C0000            xcall _sunsensor
 00E5 38FC              add SP,-4
 00E7                   .dbline 87
 00E7           ;                               break;
 00E7 804E              xjmp L8
 00E9           L13:
 00E9                   .dbline 90
 00E9           ;                               
 00E9           ;                       case 4:
 00E9           ;                               windsensor(lcdFirstLine, lcdSecondLine);
 00E9 5A00              mov [__r1],X
 00EB 060012            add [__r1],18
 00EE 5100              mov A,[__r0]
 00F0 08                push A
 00F1 5100              mov A,[__r1]
 00F3 08                push A
 00F4 5A00              mov [__r1],X
 00F6 060002            add [__r1],2
 00F9 5100              mov A,[__r0]
 00FB 08                push A
 00FC 5100              mov A,[__r1]
 00FE 08                push A
 00FF 7C0000            xcall _windsensor
 0102 38FC              add SP,-4
 0104                   .dbline 91
 0104           ;                               break;
 0104 8031              xjmp L8
 0106           L7:
 0106                   .dbline 94
 0106           ;               
 0106           ;                       default:
 0106           ;                               displaymode = 0;
 0106 560100            mov [X+1],0
 0109 560000            mov [X+0],0
 010C                   .dbline 95
 010C           ;                               csprintf(lcdFirstLine,"     Error      ");
 010C 5011              mov A,>L14
 010E 08                push A
 010F 5011              mov A,<L14
 0111 08                push A
 0112 5A00              mov [__r1],X
 0114 060002            add [__r1],2
 0117 5100              mov A,[__r0]
 0119 08                push A
 011A 5100              mov A,[__r1]
 011C 08                push A
 011D 7C0000            xcall _csprintf
 0120                   .dbline 96
 0120           ;                               csprintf(lcdSecondLine,"                ");
 0120 5000              mov A,>L15
 0122 08                push A
 0123 5000              mov A,<L15
 0125 08                push A
 0126 5A00              mov [__r1],X
 0128 060012            add [__r1],18
 012B 5100              mov A,[__r0]
 012D 08                push A
 012E 5100              mov A,[__r1]
 0130 08                push A
 0131 7C0000            xcall _csprintf
 0134 38F8              add SP,-8
 0136                   .dbline 97
 0136           ;               }
 0136           L8:
 0136                   .dbline 100
 0136           ;               
 0136           ;               // lets see what we've got
 0136           ;               LCD_Position(0,0);
 0136 10                push X
 0137 5000              mov A,0
 0139 5700              mov X,0
 013B 7C0000            xcall _LCD_Position
 013E 20                pop X
 013F                   .dbline 101
 013F           ;               LCD_PrString(lcdFirstLine);
 013F 5A00              mov [__r1],X
 0141 060002            add [__r1],2
 0144 10                push X
 0145 5100              mov A,[__r0]
 0147 08                push A
 0148 5100              mov A,[__r1]
 014A 5C                mov X,A
 014B 18                pop A
 014C 7C0000            xcall _LCD_PrString
 014F                   .dbline 102
 014F           ;               LCD_Position(1,0);
 014F 5700              mov X,0
 0151 5001              mov A,1
 0153 7C0000            xcall _LCD_Position
 0156 20                pop X
 0157                   .dbline 103
 0157           ;               LCD_PrString(lcdSecondLine);
 0157 5A00              mov [__r1],X
 0159 060012            add [__r1],18
 015C 10                push X
 015D 5100              mov A,[__r0]
 015F 08                push A
 0160 5100              mov A,[__r1]
 0162 5C                mov X,A
 0163 18                pop A
 0164 7C0000            xcall _LCD_PrString
 0167                   .dbline 106
 0167           ;               
 0167           ;               // lets sleep for a while
 0167           ;               SleepTimer_SyncWait(8, SleepTimer_WAIT_RELOAD);
 0167 5700              mov X,0
 0169 5008              mov A,8
 016B 7C0000            xcall _SleepTimer_SyncWait
 016E 20                pop X
 016F                   .dbline 107
 016F           ;       }
 016F           L5:
 016F                   .dbline 69
 016F 8F28              xjmp L4
 0171           X0:
 0171                   .dbline -2
 0171           L1:
 0171 38DE              add SP,-34
 0173 20                pop X
 0174                   .dbline 0 ; func end
 0174 8FFF              jmp .
 0176                   .dbsym l lcdSecondLine 18 A[16:16]c
 0176                   .dbsym l lcdFirstLine 2 A[16:16]c
 0176                   .dbsym l displaymode 0 i
 0176                   .dbend
                        .area lit(rom, con, rel, lit)
 0000           L15:
 0000 20202020202020202020202020202020  .byte 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
 0010 00                .byte 0
 0011           L14:
 0011 20202020204572726F72202020202020  .byte 32,32,32,32,32,'E,'r,'r,'o,'r,32,32,32,32,32,32
 0021 00                .byte 0
 0022           L3:
 0022 205765617468657273746174696F6E20  .byte 32,'W,'e,'a,'t,'h,'e,'r,'s,'t,'a,'t,'i,'o,'n,32
 0032 00                .byte 0
 0033           L2:
 0033 20202057656C636F6D6520746F202020  .byte 32,32,32,'W,'e,'l,'c,'o,'m,'e,32,'t,'o,32,32,32
 0043 00                .byte 0
