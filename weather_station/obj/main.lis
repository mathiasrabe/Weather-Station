                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATHIA~1\DOCUME~1\PSOCDE~1.2PR\WEATHE~1\WEATHE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;       humidity -> X+44
 0000           ;    temperature -> X+34
 0000           ;  lcdSecondLine -> X+18
 0000           ;   lcdFirstLine -> X+2
 0000           ;    displaymode -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3836              add SP,54
 0004                   .dbline 29
 0004           ; //----------------------------------------------------------------------------
 0004           ; // Ports:
 0004           ; // P0_0 = MCLK
 0004           ; // P0_1 = XCLR adc reset
 0004           ; // P0_2 = Button SW
 0004           ; // P0_3 = windspeed input
 0004           ; // P0_4 = sunlight (solar) input
 0004           ; // P0_5 = rainsensor input
 0004           ; // P0_6 = I2C SDA
 0004           ; // P0_7 = I2C SCL
 0004           ; // P1_0 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P2 = LCD
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #define LCD_LENGTH 16 // 16 plus \0 termination?
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; #include "HYT271.h"
 0004           ; #include "sunsensor.h"
 0004           ; #include "windspeed.h"
 0004           ; #include "overview.h"
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 32
 0004           ;       //Variables
 0004           ;       char lcdFirstLine[LCD_LENGTH], lcdSecondLine[LCD_LENGTH];
 0004           ;       unsigned int displaymode = 0;
 0004 560100            mov [X+1],0
 0007 560000            mov [X+0],0
 000A                   .dbline 39
 000A           ;       int temperature[5];
 000A           ;       int humidity[5];
 000A           ;       
 000A           ;       /** init **/
 000A           ;       
 000A           ;       // interrupt and SleepTimer init
 000A           ;       M8C_EnableGInt ;                            // Turn on interrupts
 000A 7101                      or  F, 01h
 000C           
 000C                   .dbline 40
 000C           ;       SleepTimer_Start();
 000C 10                push X
 000D 7C0000            xcall _SleepTimer_Start
 0010                   .dbline 41
 0010           ;       SleepTimer_SetInterval(SleepTimer_8_HZ);    // Set interrupt to a
 0010 5010              mov A,16
 0012 7C0000            xcall _SleepTimer_SetInterval
 0015                   .dbline 42
 0015           ;       SleepTimer_EnableInt();                     // 8 Hz rate
 0015 7C0000            xcall _SleepTimer_EnableInt
 0018                   .dbline 45
 0018           ;       
 0018           ;       // init PGA and SAR6 for sun and rain sensor
 0018           ;       PGA_sun_SetGain(PGA_sun_G5_33);  // gain of 5,33
 0018 5028              mov A,40
 001A 7C0000            xcall _PGA_sun_SetGain
 001D                   .dbline 46
 001D           ;       PGA_sun_Start(PGA_sun_HIGHPOWER);
 001D 5003              mov A,3
 001F 7C0000            xcall _PGA_sun_Start
 0022                   .dbline 47
 0022           ;       SAR6_sun_Start(SAR6_sun_HIGHPOWER);
 0022 5003              mov A,3
 0024 7C0000            xcall _SAR6_sun_Start
 0027                   .dbline 50
 0027           ;       
 0027           ;       // init PGA and SAR6 for windsensor
 0027           ;       PGA_wind_SetGain(PGA_wind_G5_33);  // gain of 5,33
 0027 5028              mov A,40
 0029 7C0000            xcall _PGA_wind_SetGain
 002C                   .dbline 51
 002C           ;       PGA_wind_Start(PGA_wind_HIGHPOWER);
 002C 5003              mov A,3
 002E 7C0000            xcall _PGA_wind_Start
 0031                   .dbline 52
 0031           ;       SAR6_wind_Start(SAR6_wind_HIGHPOWER);
 0031 5003              mov A,3
 0033 7C0000            xcall _SAR6_wind_Start
 0036                   .dbline 55
 0036           ; 
 0036           ;       // LCD init
 0036           ;       LCD_Init();
 0036 7C0000            xcall _LCD_Init
 0039 20                pop X
 003A                   .dbline 58
 003A           ;       
 003A           ;       // print welcome screen to LCD
 003A           ;       csprintf(lcdFirstLine,"   Welcome to   ");
 003A 5033              mov A,>L2
 003C 08                push A
 003D 5033              mov A,<L2
 003F 08                push A
 0040 5A00              mov [__r1],X
 0042 060002            add [__r1],2
 0045 5100              mov A,[__r0]
 0047 08                push A
 0048 5100              mov A,[__r1]
 004A 08                push A
 004B 7C0000            xcall _csprintf
 004E                   .dbline 59
 004E           ;       csprintf(lcdSecondLine, " Weatherstation ");
 004E 5022              mov A,>L3
 0050 08                push A
 0051 5022              mov A,<L3
 0053 08                push A
 0054 5A00              mov [__r1],X
 0056 060012            add [__r1],18
 0059 5100              mov A,[__r0]
 005B 08                push A
 005C 5100              mov A,[__r1]
 005E 08                push A
 005F 7C0000            xcall _csprintf
 0062 38F8              add SP,-8
 0064                   .dbline 60
 0064           ;       LCD_Position(0,0);
 0064 10                push X
 0065 5000              mov A,0
 0067 5700              mov X,0
 0069 7C0000            xcall _LCD_Position
 006C 20                pop X
 006D                   .dbline 61
 006D           ;       LCD_PrString(lcdFirstLine);
 006D 5A00              mov [__r1],X
 006F 060002            add [__r1],2
 0072 10                push X
 0073 5100              mov A,[__r0]
 0075 08                push A
 0076 5100              mov A,[__r1]
 0078 5C                mov X,A
 0079 18                pop A
 007A 7C0000            xcall _LCD_PrString
 007D                   .dbline 62
 007D           ;       LCD_Position(1,0);
 007D 5700              mov X,0
 007F 5001              mov A,1
 0081 7C0000            xcall _LCD_Position
 0084 20                pop X
 0085                   .dbline 63
 0085           ;       LCD_PrString(lcdSecondLine);
 0085 5A00              mov [__r1],X
 0087 060012            add [__r1],18
 008A 10                push X
 008B 5100              mov A,[__r0]
 008D 08                push A
 008E 5100              mov A,[__r1]
 0090 5C                mov X,A
 0091 18                pop A
 0092 7C0000            xcall _LCD_PrString
 0095                   .dbline 66
 0095           ;       
 0095           ;       // just wait a bit
 0095           ;       SleepTimer_SyncWait(4, SleepTimer_FORCE_RELOAD);
 0095 5701              mov X,1
 0097 5004              mov A,4
 0099 7C0000            xcall _SleepTimer_SyncWait
 009C 20                pop X
 009D 81A0              xjmp L5
 009F           L4:
 009F                   .dbline 68
 009F           ;       
 009F           ;       while(1) {
 009F                   .dbline 71
 009F           ;       
 009F           ;               //checking if butten is prest 
 009F           ;               if(PRT0DR & 0b00000100) { 
 009F 5D00              mov A,REG[0]
 00A1 5300              mov [__r0],A
 00A3 470004            tst [__r0],4
 00A6 A016              jz L7
 00A8                   .dbline 73
 00A8           ;                       //switches displaymode betwen 0 and 4
 00A8           ;                       displaymode ++;
 00A8                   .dbline 73
 00A8 7701              inc [X+1]
 00AA 0F0000            adc [X+0],0
 00AD                   .dbline 74
 00AD           ;                       if(displaymode>4)
 00AD 5004              mov A,4
 00AF 1301              sub A,[X+1]
 00B1 5000              mov A,0
 00B3 1B00              sbb A,[X+0]
 00B5 D007              jnc L9
 00B7           X1:
 00B7                   .dbline 75
 00B7           ;                       displaymode = 0;
 00B7 560100            mov [X+1],0
 00BA 560000            mov [X+0],0
 00BD           L9:
 00BD                   .dbline 76
 00BD           ;               }
 00BD           L7:
 00BD                   .dbline 79
 00BD           ;               
 00BD           ;               // get temp and humidity here
 00BD           ;               I2Cm_Start();                           //Initialize I2C
 00BD 10                push X
 00BE 7C0000            xcall _I2Cm_Start
 00C1                   .dbline 80
 00C1           ;               I2Cm_fSendStart( 0x28, 0);      //Send Measuring Request        
 00C1 5700              mov X,0
 00C3 5028              mov A,40
 00C5 7C0000            xcall _I2Cm_fSendStart
 00C8 20                pop X
 00C9 5300              mov [__r0],A
 00CB                   .dbline 81
 00CB           ;               measuring(temperature, humidity); //measure temperature and humidity
 00CB 5A00              mov [__r1],X
 00CD 06002C            add [__r1],44
 00D0 08                push A
 00D1 5100              mov A,[__r1]
 00D3 08                push A
 00D4 5A00              mov [__r1],X
 00D6 060022            add [__r1],34
 00D9 5100              mov A,[__r0]
 00DB 08                push A
 00DC 5100              mov A,[__r1]
 00DE 08                push A
 00DF 7C0000            xcall _measuring
 00E2 38FC              add SP,-4
 00E4                   .dbline 83
 00E4           ;               
 00E4           ;               switch(displaymode) {
 00E4 3D0000            cmp [X+0],0
 00E7 B006              jnz X2
 00E9 3D0100            cmp [X+1],0
 00EC A02B              jz L13
 00EE           X2:
 00EE 3D0000            cmp [X+0],0
 00F1 B006              jnz X3
 00F3 3D0101            cmp [X+1],1
 00F6 A054              jz L14
 00F8           X3:
 00F8 3D0000            cmp [X+0],0
 00FB B006              jnz X4
 00FD 3D0102            cmp [X+1],2
 0100 A072              jz L15
 0102           X4:
 0102 3D0000            cmp [X+0],0
 0105 B006              jnz X5
 0107 3D0103            cmp [X+1],3
 010A A090              jz L16
 010C           X5:
 010C 3D0000            cmp [X+0],0
 010F B006              jnz X6
 0111 3D0104            cmp [X+1],4
 0114 A0A3              jz L17
 0116           X6:
 0116 80BE              xjmp L11
 0118           L13:
 0118                   .dbline 85
 0118           ;                       case 0:
 0118           ;                               overview(lcdFirstLine, lcdSecondLine, temperature, humidity);
 0118 5A00              mov [__r1],X
 011A 06002C            add [__r1],44
 011D 5100              mov A,[__r0]
 011F 08                push A
 0120 5100              mov A,[__r1]
 0122 08                push A
 0123 5A00              mov [__r1],X
 0125 060022            add [__r1],34
 0128 5100              mov A,[__r0]
 012A 08                push A
 012B 5100              mov A,[__r1]
 012D 08                push A
 012E 5A00              mov [__r1],X
 0130 060012            add [__r1],18
 0133 5100              mov A,[__r0]
 0135 08                push A
 0136 5100              mov A,[__r1]
 0138 08                push A
 0139 5A00              mov [__r1],X
 013B 060002            add [__r1],2
 013E 5100              mov A,[__r0]
 0140 08                push A
 0141 5100              mov A,[__r1]
 0143 08                push A
 0144 7C0000            xcall _overview
 0147 38F8              add SP,-8
 0149                   .dbline 86
 0149           ;                               break;
 0149 80BB              xjmp L12
 014B           L14:
 014B                   .dbline 89
 014B           ;                               
 014B           ;                       case 1:
 014B           ;                               printtemp(lcdFirstLine, lcdSecondLine, temperature);  //write temp in the variable for the lcd
 014B 5A00              mov [__r1],X
 014D 060022            add [__r1],34
 0150 5100              mov A,[__r0]
 0152 08                push A
 0153 5100              mov A,[__r1]
 0155 08                push A
 0156 5A00              mov [__r1],X
 0158 060012            add [__r1],18
 015B 5100              mov A,[__r0]
 015D 08                push A
 015E 5100              mov A,[__r1]
 0160 08                push A
 0161 5A00              mov [__r1],X
 0163 060002            add [__r1],2
 0166 5100              mov A,[__r0]
 0168 08                push A
 0169 5100              mov A,[__r1]
 016B 08                push A
 016C 7C0000            xcall _printtemp
 016F 38FA              add SP,-6
 0171                   .dbline 90
 0171           ;                               break;
 0171 8093              xjmp L12
 0173           L15:
 0173                   .dbline 93
 0173           ;                               
 0173           ;                       case 2:
 0173           ;                               printhum(lcdFirstLine, lcdSecondLine, humidity);  //wirte humidity in the variable for the lcd
 0173 5A00              mov [__r1],X
 0175 06002C            add [__r1],44
 0178 5100              mov A,[__r0]
 017A 08                push A
 017B 5100              mov A,[__r1]
 017D 08                push A
 017E 5A00              mov [__r1],X
 0180 060012            add [__r1],18
 0183 5100              mov A,[__r0]
 0185 08                push A
 0186 5100              mov A,[__r1]
 0188 08                push A
 0189 5A00              mov [__r1],X
 018B 060002            add [__r1],2
 018E 5100              mov A,[__r0]
 0190 08                push A
 0191 5100              mov A,[__r1]
 0193 08                push A
 0194 7C0000            xcall _printhum
 0197 38FA              add SP,-6
 0199                   .dbline 94
 0199           ;                               break;
 0199 806B              xjmp L12
 019B           L16:
 019B                   .dbline 97
 019B           ;                               
 019B           ;                       case 3:
 019B           ;                               sunsensor(lcdFirstLine, lcdSecondLine); // is it day or night and is it rainy?
 019B 5A00              mov [__r1],X
 019D 060012            add [__r1],18
 01A0 5100              mov A,[__r0]
 01A2 08                push A
 01A3 5100              mov A,[__r1]
 01A5 08                push A
 01A6 5A00              mov [__r1],X
 01A8 060002            add [__r1],2
 01AB 5100              mov A,[__r0]
 01AD 08                push A
 01AE 5100              mov A,[__r1]
 01B0 08                push A
 01B1 7C0000            xcall _sunsensor
 01B4 38FC              add SP,-4
 01B6                   .dbline 98
 01B6           ;                               break;
 01B6 804E              xjmp L12
 01B8           L17:
 01B8                   .dbline 101
 01B8           ;                               
 01B8           ;                       case 4:
 01B8           ;                               windsensor(lcdFirstLine, lcdSecondLine); // write windspeed here
 01B8 5A00              mov [__r1],X
 01BA 060012            add [__r1],18
 01BD 5100              mov A,[__r0]
 01BF 08                push A
 01C0 5100              mov A,[__r1]
 01C2 08                push A
 01C3 5A00              mov [__r1],X
 01C5 060002            add [__r1],2
 01C8 5100              mov A,[__r0]
 01CA 08                push A
 01CB 5100              mov A,[__r1]
 01CD 08                push A
 01CE 7C0000            xcall _windsensor
 01D1 38FC              add SP,-4
 01D3                   .dbline 102
 01D3           ;                               break;
 01D3 8031              xjmp L12
 01D5           L11:
 01D5                   .dbline 105
 01D5           ;               
 01D5           ;                       default:
 01D5           ;                               displaymode = 0;
 01D5 560100            mov [X+1],0
 01D8 560000            mov [X+0],0
 01DB                   .dbline 106
 01DB           ;                               csprintf(lcdFirstLine,"     Error      ");
 01DB 5011              mov A,>L18
 01DD 08                push A
 01DE 5011              mov A,<L18
 01E0 08                push A
 01E1 5A00              mov [__r1],X
 01E3 060002            add [__r1],2
 01E6 5100              mov A,[__r0]
 01E8 08                push A
 01E9 5100              mov A,[__r1]
 01EB 08                push A
 01EC 7C0000            xcall _csprintf
 01EF                   .dbline 107
 01EF           ;                               csprintf(lcdSecondLine,"                ");
 01EF 5000              mov A,>L19
 01F1 08                push A
 01F2 5000              mov A,<L19
 01F4 08                push A
 01F5 5A00              mov [__r1],X
 01F7 060012            add [__r1],18
 01FA 5100              mov A,[__r0]
 01FC 08                push A
 01FD 5100              mov A,[__r1]
 01FF 08                push A
 0200 7C0000            xcall _csprintf
 0203 38F8              add SP,-8
 0205                   .dbline 108
 0205           ;               }
 0205           L12:
 0205                   .dbline 111
 0205           ;               
 0205           ;               // lets see what we've got
 0205           ;               LCD_Position(0,0);
 0205 10                push X
 0206 5000              mov A,0
 0208 5700              mov X,0
 020A 7C0000            xcall _LCD_Position
 020D 20                pop X
 020E                   .dbline 112
 020E           ;               LCD_PrString(lcdFirstLine);
 020E 5A00              mov [__r1],X
 0210 060002            add [__r1],2
 0213 10                push X
 0214 5100              mov A,[__r0]
 0216 08                push A
 0217 5100              mov A,[__r1]
 0219 5C                mov X,A
 021A 18                pop A
 021B 7C0000            xcall _LCD_PrString
 021E                   .dbline 113
 021E           ;               LCD_Position(1,0);
 021E 5700              mov X,0
 0220 5001              mov A,1
 0222 7C0000            xcall _LCD_Position
 0225 20                pop X
 0226                   .dbline 114
 0226           ;               LCD_PrString(lcdSecondLine);
 0226 5A00              mov [__r1],X
 0228 060012            add [__r1],18
 022B 10                push X
 022C 5100              mov A,[__r0]
 022E 08                push A
 022F 5100              mov A,[__r1]
 0231 5C                mov X,A
 0232 18                pop A
 0233 7C0000            xcall _LCD_PrString
 0236                   .dbline 117
 0236           ;               
 0236           ;               // lets sleep for a while
 0236           ;               SleepTimer_SyncWait(8, SleepTimer_WAIT_RELOAD);
 0236 5700              mov X,0
 0238 5008              mov A,8
 023A 7C0000            xcall _SleepTimer_SyncWait
 023D 20                pop X
 023E                   .dbline 118
 023E           ;       }
 023E           L5:
 023E                   .dbline 68
 023E 8E60              xjmp L4
 0240           X0:
 0240                   .dbline -2
 0240           L1:
 0240 38CA              add SP,-54
 0242 20                pop X
 0243                   .dbline 0 ; func end
 0243 8FFF              jmp .
 0245                   .dbsym l humidity 44 A[10:5]I
 0245                   .dbsym l temperature 34 A[10:5]I
 0245                   .dbsym l lcdSecondLine 18 A[16:16]c
 0245                   .dbsym l lcdFirstLine 2 A[16:16]c
 0245                   .dbsym l displaymode 0 i
 0245                   .dbend
                        .area lit(rom, con, rel, lit)
 0000           L19:
 0000 20202020202020202020202020202020  .byte 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
 0010 00                .byte 0
 0011           L18:
 0011 20202020204572726F72202020202020  .byte 32,32,32,32,32,'E,'r,'r,'o,'r,32,32,32,32,32,32
 0021 00                .byte 0
 0022           L3:
 0022 205765617468657273746174696F6E20  .byte 32,'W,'e,'a,'t,'h,'e,'r,'s,'t,'a,'t,'i,'o,'n,32
 0032 00                .byte 0
 0033           L2:
 0033 20202057656C636F6D6520746F202020  .byte 32,32,32,'W,'e,'l,'c,'o,'m,'e,32,'t,'o,32,32,32
 0043 00                .byte 0
