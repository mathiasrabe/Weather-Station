                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATHIA~1\DOCUME~1\PSOCDE~1.2PR\WEATHE~1\WEATHE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;       humidity -> X+44
 0000           ;    temperature -> X+34
 0000           ;  lcdSecondLine -> X+18
 0000           ;   lcdFirstLine -> X+2
 0000           ;    displaymode -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3836              add SP,54
 0004                   .dbline 36
 0004           ; //----------------------------------------------------------------------------
 0004           ; // Ports:
 0004           ; // P0_0 = MCLK
 0004           ; // P0_1 = XCLR adc reset
 0004           ; // P0_2 = Button SW
 0004           ; // P0_3 = windspeed input
 0004           ; // P0_4 = sunlight (solar) input
 0004           ; // P0_5 = rainsensor input
 0004           ; // P0_6 = I2C SDA
 0004           ; // P0_7 = I2C SCL
 0004           ; // P1_0 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P2 = LCD
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #define LCD_LENGTH 16 // 16 plus \0 termination?
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; #include "HYT271.h"
 0004           ; #include "sunsensor.h"
 0004           ; #include "windspeed.h"
 0004           ; /*
 0004           ; typedef enum {
 0004           ;       overview = 0,
 0004           ;       temp = 1,
 0004           ;       humidity = 2,
 0004           ;       rain = 3,
 0004           ;       wind = 4,
 0004           ; } MODE;*/
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 39
 0004           ;       //Variables
 0004           ;       char lcdFirstLine[LCD_LENGTH], lcdSecondLine[LCD_LENGTH];
 0004           ;       unsigned int displaymode = 0;
 0004 560100            mov [X+1],0
 0007 560000            mov [X+0],0
 000A                   .dbline 46
 000A           ;       int temperature[5];
 000A           ;       int humidity[5];
 000A           ;       
 000A           ;       /** init **/
 000A           ;       
 000A           ;       // interrupt and SleepTimer init
 000A           ;       M8C_EnableGInt ;                            // Turn on interrupts
 000A 7101                      or  F, 01h
 000C           
 000C                   .dbline 47
 000C           ;       SleepTimer_Start();
 000C 10                push X
 000D 7C0000            xcall _SleepTimer_Start
 0010                   .dbline 48
 0010           ;       SleepTimer_SetInterval(SleepTimer_8_HZ);    // Set interrupt to a
 0010 5010              mov A,16
 0012 7C0000            xcall _SleepTimer_SetInterval
 0015                   .dbline 49
 0015           ;       SleepTimer_EnableInt();                     // 8 Hz rate
 0015 7C0000            xcall _SleepTimer_EnableInt
 0018                   .dbline 52
 0018           ;       
 0018           ;       // init PGA and SAR6 for sun and rain sensor
 0018           ;       PGA_sun_SetGain(PGA_sun_G5_33);  // gain of 5,33
 0018 5028              mov A,40
 001A 7C0000            xcall _PGA_sun_SetGain
 001D                   .dbline 53
 001D           ;       PGA_sun_Start(PGA_sun_HIGHPOWER);
 001D 5003              mov A,3
 001F 7C0000            xcall _PGA_sun_Start
 0022                   .dbline 54
 0022           ;       SAR6_sun_Start(SAR6_sun_HIGHPOWER);
 0022 5003              mov A,3
 0024 7C0000            xcall _SAR6_sun_Start
 0027                   .dbline 57
 0027           ;       
 0027           ;       // init PGA and SAR6 for windsensor
 0027           ;       PGA_wind_SetGain(PGA_wind_G5_33);  // gain of 5,33
 0027 5028              mov A,40
 0029 7C0000            xcall _PGA_wind_SetGain
 002C                   .dbline 58
 002C           ;       PGA_wind_Start(PGA_wind_HIGHPOWER);
 002C 5003              mov A,3
 002E 7C0000            xcall _PGA_wind_Start
 0031                   .dbline 59
 0031           ;       SAR6_wind_Start(SAR6_wind_HIGHPOWER);
 0031 5003              mov A,3
 0033 7C0000            xcall _SAR6_wind_Start
 0036                   .dbline 62
 0036           ; 
 0036           ;       // LCD init
 0036           ;       LCD_Init();
 0036 7C0000            xcall _LCD_Init
 0039 20                pop X
 003A                   .dbline 65
 003A           ;       
 003A           ;       // print welcome screen to LCD
 003A           ;       csprintf(lcdFirstLine,"   Welcome to   ");
 003A 5033              mov A,>L2
 003C 08                push A
 003D 5033              mov A,<L2
 003F 08                push A
 0040 5A00              mov [__r1],X
 0042 060002            add [__r1],2
 0045 5100              mov A,[__r0]
 0047 08                push A
 0048 5100              mov A,[__r1]
 004A 08                push A
 004B 7C0000            xcall _csprintf
 004E                   .dbline 66
 004E           ;       csprintf(lcdSecondLine, " Weatherstation ");
 004E 5022              mov A,>L3
 0050 08                push A
 0051 5022              mov A,<L3
 0053 08                push A
 0054 5A00              mov [__r1],X
 0056 060012            add [__r1],18
 0059 5100              mov A,[__r0]
 005B 08                push A
 005C 5100              mov A,[__r1]
 005E 08                push A
 005F 7C0000            xcall _csprintf
 0062 38F8              add SP,-8
 0064                   .dbline 67
 0064           ;       LCD_Position(0,0);
 0064 10                push X
 0065 5000              mov A,0
 0067 5700              mov X,0
 0069 7C0000            xcall _LCD_Position
 006C 20                pop X
 006D                   .dbline 68
 006D           ;       LCD_PrString(lcdFirstLine);
 006D 5A00              mov [__r1],X
 006F 060002            add [__r1],2
 0072 10                push X
 0073 5100              mov A,[__r0]
 0075 08                push A
 0076 5100              mov A,[__r1]
 0078 5C                mov X,A
 0079 18                pop A
 007A 7C0000            xcall _LCD_PrString
 007D                   .dbline 69
 007D           ;       LCD_Position(1,0);
 007D 5700              mov X,0
 007F 5001              mov A,1
 0081 7C0000            xcall _LCD_Position
 0084 20                pop X
 0085                   .dbline 70
 0085           ;       LCD_PrString(lcdSecondLine);
 0085 5A00              mov [__r1],X
 0087 060012            add [__r1],18
 008A 10                push X
 008B 5100              mov A,[__r0]
 008D 08                push A
 008E 5100              mov A,[__r1]
 0090 5C                mov X,A
 0091 18                pop A
 0092 7C0000            xcall _LCD_PrString
 0095 20                pop X
 0096 816D              xjmp L5
 0098           L4:
 0098                   .dbline 72
 0098           ;       
 0098           ;       while(1) {
 0098                   .dbline 75
 0098           ;       
 0098           ;               //checking if butten is prest 
 0098           ;               if(PRT0DR & 0b00000100) { 
 0098 5D00              mov A,REG[0]
 009A 5300              mov [__r0],A
 009C 470004            tst [__r0],4
 009F A016              jz L7
 00A1                   .dbline 77
 00A1           ;                       //switches displaymode betwen 0 and 4
 00A1           ;                       displaymode ++;
 00A1                   .dbline 77
 00A1 7701              inc [X+1]
 00A3 0F0000            adc [X+0],0
 00A6                   .dbline 78
 00A6           ;                       if(displaymode>4)
 00A6 5004              mov A,4
 00A8 1301              sub A,[X+1]
 00AA 5000              mov A,0
 00AC 1B00              sbb A,[X+0]
 00AE D007              jnc L9
 00B0           X1:
 00B0                   .dbline 79
 00B0           ;                       displaymode = 0;
 00B0 560100            mov [X+1],0
 00B3 560000            mov [X+0],0
 00B6           L9:
 00B6                   .dbline 80
 00B6           ;               }
 00B6           L7:
 00B6                   .dbline 83
 00B6           ;                       
 00B6           ;               // get temp and humidity here
 00B6           ;               I2Cm_Start();                           //Initialize I2C
 00B6 10                push X
 00B7 7C0000            xcall _I2Cm_Start
 00BA                   .dbline 84
 00BA           ;               I2Cm_fSendStart( 0x28, 0);      //Send Measuring Request        
 00BA 5700              mov X,0
 00BC 5028              mov A,40
 00BE 7C0000            xcall _I2Cm_fSendStart
 00C1 20                pop X
 00C2                   .dbline 87
 00C2           ;               //measuring(temperature, humidity);
 00C2           ;               
 00C2           ;               switch(displaymode) {
 00C2 3D0000            cmp [X+0],0
 00C5 B006              jnz X2
 00C7 3D0100            cmp [X+1],0
 00CA A0E5              jz L12
 00CC           X2:
 00CC 3D0000            cmp [X+0],0
 00CF B006              jnz X3
 00D1 3D0101            cmp [X+1],1
 00D4 A021              jz L14
 00D6           X3:
 00D6 3D0000            cmp [X+0],0
 00D9 B006              jnz X4
 00DB 3D0102            cmp [X+1],2
 00DE A03F              jz L15
 00E0           X4:
 00E0 3D0000            cmp [X+0],0
 00E3 B006              jnz X5
 00E5 3D0103            cmp [X+1],3
 00E8 A05D              jz L16
 00EA           X5:
 00EA 3D0000            cmp [X+0],0
 00ED B006              jnz X6
 00EF 3D0104            cmp [X+1],4
 00F2 A070              jz L17
 00F4           X6:
 00F4 808B              xjmp L11
 00F6           L14:
 00F6                   .dbline 93
 00F6           ;                       case 0:
 00F6           ;                               // overview();
 00F6           ;                               break;
 00F6           ;                               
 00F6           ;                       case 1:
 00F6           ;                               printtemp(lcdFirstLine, lcdSecondLine, temperature);
 00F6 5A00              mov [__r1],X
 00F8 060022            add [__r1],34
 00FB 5100              mov A,[__r0]
 00FD 08                push A
 00FE 5100              mov A,[__r1]
 0100 08                push A
 0101 5A00              mov [__r1],X
 0103 060012            add [__r1],18
 0106 5100              mov A,[__r0]
 0108 08                push A
 0109 5100              mov A,[__r1]
 010B 08                push A
 010C 5A00              mov [__r1],X
 010E 060002            add [__r1],2
 0111 5100              mov A,[__r0]
 0113 08                push A
 0114 5100              mov A,[__r1]
 0116 08                push A
 0117 7C0000            xcall _printtemp
 011A 38FA              add SP,-6
 011C                   .dbline 94
 011C           ;                               break;
 011C 8093              xjmp L12
 011E           L15:
 011E                   .dbline 97
 011E           ;                               
 011E           ;                       case 2:
 011E           ;                               printhum(lcdFirstLine, lcdSecondLine, humidity);
 011E 5A00              mov [__r1],X
 0120 06002C            add [__r1],44
 0123 5100              mov A,[__r0]
 0125 08                push A
 0126 5100              mov A,[__r1]
 0128 08                push A
 0129 5A00              mov [__r1],X
 012B 060012            add [__r1],18
 012E 5100              mov A,[__r0]
 0130 08                push A
 0131 5100              mov A,[__r1]
 0133 08                push A
 0134 5A00              mov [__r1],X
 0136 060002            add [__r1],2
 0139 5100              mov A,[__r0]
 013B 08                push A
 013C 5100              mov A,[__r1]
 013E 08                push A
 013F 7C0000            xcall _printhum
 0142 38FA              add SP,-6
 0144                   .dbline 98
 0144           ;                               break;
 0144 806B              xjmp L12
 0146           L16:
 0146                   .dbline 101
 0146           ;                               
 0146           ;                       case 3:
 0146           ;                               sunsensor(lcdFirstLine, lcdSecondLine);
 0146 5A00              mov [__r1],X
 0148 060012            add [__r1],18
 014B 5100              mov A,[__r0]
 014D 08                push A
 014E 5100              mov A,[__r1]
 0150 08                push A
 0151 5A00              mov [__r1],X
 0153 060002            add [__r1],2
 0156 5100              mov A,[__r0]
 0158 08                push A
 0159 5100              mov A,[__r1]
 015B 08                push A
 015C 7C0000            xcall _sunsensor
 015F 38FC              add SP,-4
 0161                   .dbline 102
 0161           ;                               break;
 0161 804E              xjmp L12
 0163           L17:
 0163                   .dbline 105
 0163           ;                               
 0163           ;                       case 4:
 0163           ;                               windsensor(lcdFirstLine, lcdSecondLine);
 0163 5A00              mov [__r1],X
 0165 060012            add [__r1],18
 0168 5100              mov A,[__r0]
 016A 08                push A
 016B 5100              mov A,[__r1]
 016D 08                push A
 016E 5A00              mov [__r1],X
 0170 060002            add [__r1],2
 0173 5100              mov A,[__r0]
 0175 08                push A
 0176 5100              mov A,[__r1]
 0178 08                push A
 0179 7C0000            xcall _windsensor
 017C 38FC              add SP,-4
 017E                   .dbline 106
 017E           ;                               break;
 017E 8031              xjmp L12
 0180           L11:
 0180                   .dbline 109
 0180           ;               
 0180           ;                       default:
 0180           ;                               displaymode = 0;
 0180 560100            mov [X+1],0
 0183 560000            mov [X+0],0
 0186                   .dbline 110
 0186           ;                               csprintf(lcdFirstLine,"     Error      ");
 0186 5011              mov A,>L18
 0188 08                push A
 0189 5011              mov A,<L18
 018B 08                push A
 018C 5A00              mov [__r1],X
 018E 060002            add [__r1],2
 0191 5100              mov A,[__r0]
 0193 08                push A
 0194 5100              mov A,[__r1]
 0196 08                push A
 0197 7C0000            xcall _csprintf
 019A                   .dbline 111
 019A           ;                               csprintf(lcdSecondLine,"                ");
 019A 5000              mov A,>L19
 019C 08                push A
 019D 5000              mov A,<L19
 019F 08                push A
 01A0 5A00              mov [__r1],X
 01A2 060012            add [__r1],18
 01A5 5100              mov A,[__r0]
 01A7 08                push A
 01A8 5100              mov A,[__r1]
 01AA 08                push A
 01AB 7C0000            xcall _csprintf
 01AE 38F8              add SP,-8
 01B0                   .dbline 112
 01B0           ;               }
 01B0           L12:
 01B0                   .dbline 115
 01B0           ;               
 01B0           ;               // lets see what we've got
 01B0           ;               LCD_Position(0,0);
 01B0 10                push X
 01B1 5000              mov A,0
 01B3 5700              mov X,0
 01B5 7C0000            xcall _LCD_Position
 01B8 20                pop X
 01B9                   .dbline 116
 01B9           ;               LCD_PrString(lcdFirstLine);
 01B9 5A00              mov [__r1],X
 01BB 060002            add [__r1],2
 01BE 10                push X
 01BF 5100              mov A,[__r0]
 01C1 08                push A
 01C2 5100              mov A,[__r1]
 01C4 5C                mov X,A
 01C5 18                pop A
 01C6 7C0000            xcall _LCD_PrString
 01C9                   .dbline 117
 01C9           ;               LCD_Position(1,0);
 01C9 5700              mov X,0
 01CB 5001              mov A,1
 01CD 7C0000            xcall _LCD_Position
 01D0 20                pop X
 01D1                   .dbline 118
 01D1           ;               LCD_PrString(lcdSecondLine);
 01D1 5A00              mov [__r1],X
 01D3 060012            add [__r1],18
 01D6 10                push X
 01D7 5100              mov A,[__r0]
 01D9 08                push A
 01DA 5100              mov A,[__r1]
 01DC 5C                mov X,A
 01DD 18                pop A
 01DE 7C0000            xcall _LCD_PrString
 01E1                   .dbline 121
 01E1           ;               
 01E1           ;               // lets sleep for a while
 01E1           ;               SleepTimer_SyncWait(8, SleepTimer_WAIT_RELOAD);
 01E1 5700              mov X,0
 01E3 5008              mov A,8
 01E5 7C0000            xcall _SleepTimer_SyncWait
 01E8 20                pop X
 01E9                   .dbline 122
 01E9           ;               measuring(temperature, humidity);
 01E9 5A00              mov [__r1],X
 01EB 06002C            add [__r1],44
 01EE 5100              mov A,[__r0]
 01F0 08                push A
 01F1 5100              mov A,[__r1]
 01F3 08                push A
 01F4 5A00              mov [__r1],X
 01F6 060022            add [__r1],34
 01F9 5100              mov A,[__r0]
 01FB 08                push A
 01FC 5100              mov A,[__r1]
 01FE 08                push A
 01FF 7C0000            xcall _measuring
 0202 38FC              add SP,-4
 0204                   .dbline 123
 0204           ;       }
 0204           L5:
 0204                   .dbline 72
 0204 8E93              xjmp L4
 0206           X0:
 0206                   .dbline -2
 0206           L1:
 0206 38CA              add SP,-54
 0208 20                pop X
 0209                   .dbline 0 ; func end
 0209 8FFF              jmp .
 020B                   .dbsym l humidity 44 A[10:5]I
 020B                   .dbsym l temperature 34 A[10:5]I
 020B                   .dbsym l lcdSecondLine 18 A[16:16]c
 020B                   .dbsym l lcdFirstLine 2 A[16:16]c
 020B                   .dbsym l displaymode 0 i
 020B                   .dbend
                        .area lit(rom, con, rel, lit)
 0000           L19:
 0000 20202020202020202020202020202020  .byte 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
 0010 00                .byte 0
 0011           L18:
 0011 20202020204572726F72202020202020  .byte 32,32,32,32,32,'E,'r,'r,'o,'r,32,32,32,32,32,32
 0021 00                .byte 0
 0022           L3:
 0022 205765617468657273746174696F6E20  .byte 32,'W,'e,'a,'t,'h,'e,'r,'s,'t,'a,'t,'i,'o,'n,32
 0032 00                .byte 0
 0033           L2:
 0033 20202057656C636F6D6520746F202020  .byte 32,32,32,'W,'e,'l,'c,'o,'m,'e,32,'t,'o,32,32,32
 0043 00                .byte 0
