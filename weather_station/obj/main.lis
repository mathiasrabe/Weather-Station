                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATHIA~1\DOCUME~1\PSOCDE~1.2PR\WEATHE~1\WEATHE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;       humidity -> X+44
 0000           ;    temperature -> X+34
 0000           ;  lcdSecondLine -> X+18
 0000           ;   lcdFirstLine -> X+2
 0000           ;    displaymode -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3836              add SP,54
 0004                   .dbline 29
 0004           ; //----------------------------------------------------------------------------
 0004           ; // Ports:
 0004           ; // P0_0 = MCLK
 0004           ; // P0_1 = XCLR adc reset
 0004           ; // P0_2 = Button SW
 0004           ; // P0_3 = windspeed input
 0004           ; // P0_4 = sunlight (solar) input
 0004           ; // P0_5 = rainsensor input
 0004           ; // P0_6 = I2C SDA
 0004           ; // P0_7 = I2C SCL
 0004           ; // P1_0 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P2 = LCD
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #define LCD_LENGTH 16 // 16 plus \0 termination?
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; #include "HYT271.h"
 0004           ; #include "sunsensor.h"
 0004           ; #include "windspeed.h"
 0004           ; #include "overview.h"
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 32
 0004           ;       //Variables
 0004           ;       char lcdFirstLine[LCD_LENGTH], lcdSecondLine[LCD_LENGTH];
 0004           ;       unsigned int displaymode = 0;
 0004 560100            mov [X+1],0
 0007 560000            mov [X+0],0
 000A                   .dbline 39
 000A           ;       int temperature[5];
 000A           ;       int humidity[5];
 000A           ;       
 000A           ;       /** init **/
 000A           ;       
 000A           ;       // interrupt and SleepTimer init
 000A           ;       M8C_EnableGInt ;                            // Turn on interrupts
 000A 7101                      or  F, 01h
 000C           
 000C                   .dbline 40
 000C           ;       SleepTimer_Start();
 000C 10                push X
 000D 7C0000            xcall _SleepTimer_Start
 0010                   .dbline 41
 0010           ;       SleepTimer_SetInterval(SleepTimer_8_HZ);    // Set interrupt to a
 0010 5010              mov A,16
 0012 7C0000            xcall _SleepTimer_SetInterval
 0015                   .dbline 42
 0015           ;       SleepTimer_EnableInt();                     // 8 Hz rate
 0015 7C0000            xcall _SleepTimer_EnableInt
 0018                   .dbline 45
 0018           ;       
 0018           ;       // init PGA and SAR6 for sun and rain sensor
 0018           ;       PGA_sun_SetGain(PGA_sun_G5_33);  // gain of 5,33
 0018 5028              mov A,40
 001A 7C0000            xcall _PGA_sun_SetGain
 001D                   .dbline 46
 001D           ;       PGA_sun_Start(PGA_sun_HIGHPOWER);
 001D 5003              mov A,3
 001F 7C0000            xcall _PGA_sun_Start
 0022                   .dbline 47
 0022           ;       SAR6_sun_Start(SAR6_sun_HIGHPOWER);
 0022 5003              mov A,3
 0024 7C0000            xcall _SAR6_sun_Start
 0027                   .dbline 50
 0027           ;       
 0027           ;       // init PGA and SAR6 for windsensor
 0027           ;       PGA_wind_SetGain(PGA_wind_G5_33);  // gain of 5,33
 0027 5028              mov A,40
 0029 7C0000            xcall _PGA_wind_SetGain
 002C                   .dbline 51
 002C           ;       PGA_wind_Start(PGA_wind_HIGHPOWER);
 002C 5003              mov A,3
 002E 7C0000            xcall _PGA_wind_Start
 0031                   .dbline 52
 0031           ;       SAR6_wind_Start(SAR6_wind_HIGHPOWER);
 0031 5003              mov A,3
 0033 7C0000            xcall _SAR6_wind_Start
 0036                   .dbline 55
 0036           ; 
 0036           ;       // LCD init
 0036           ;       LCD_Init();
 0036 7C0000            xcall _LCD_Init
 0039 20                pop X
 003A                   .dbline 58
 003A           ;       
 003A           ;       // print welcome screen to LCD
 003A           ;       csprintf(lcdFirstLine,"   Welcome to   ");
 003A 5033              mov A,>L2
 003C 08                push A
 003D 5033              mov A,<L2
 003F 08                push A
 0040 5A00              mov [__r1],X
 0042 060002            add [__r1],2
 0045 5100              mov A,[__r0]
 0047 08                push A
 0048 5100              mov A,[__r1]
 004A 08                push A
 004B 7C0000            xcall _csprintf
 004E                   .dbline 59
 004E           ;       csprintf(lcdSecondLine, " Weatherstation ");
 004E 5022              mov A,>L3
 0050 08                push A
 0051 5022              mov A,<L3
 0053 08                push A
 0054 5A00              mov [__r1],X
 0056 060012            add [__r1],18
 0059 5100              mov A,[__r0]
 005B 08                push A
 005C 5100              mov A,[__r1]
 005E 08                push A
 005F 7C0000            xcall _csprintf
 0062 38F8              add SP,-8
 0064                   .dbline 60
 0064           ;       LCD_Position(0,0);
 0064 10                push X
 0065 5000              mov A,0
 0067 5700              mov X,0
 0069 7C0000            xcall _LCD_Position
 006C 20                pop X
 006D                   .dbline 61
 006D           ;       LCD_PrString(lcdFirstLine);
 006D 5A00              mov [__r1],X
 006F 060002            add [__r1],2
 0072 10                push X
 0073 5100              mov A,[__r0]
 0075 08                push A
 0076 5100              mov A,[__r1]
 0078 5C                mov X,A
 0079 18                pop A
 007A 7C0000            xcall _LCD_PrString
 007D                   .dbline 62
 007D           ;       LCD_Position(1,0);
 007D 5700              mov X,0
 007F 5001              mov A,1
 0081 7C0000            xcall _LCD_Position
 0084 20                pop X
 0085                   .dbline 63
 0085           ;       LCD_PrString(lcdSecondLine);
 0085 5A00              mov [__r1],X
 0087 060012            add [__r1],18
 008A 10                push X
 008B 5100              mov A,[__r0]
 008D 08                push A
 008E 5100              mov A,[__r1]
 0090 5C                mov X,A
 0091 18                pop A
 0092 7C0000            xcall _LCD_PrString
 0095 20                pop X
 0096 81A0              xjmp L5
 0098           L4:
 0098                   .dbline 65
 0098           ;       
 0098           ;       while(1) {
 0098                   .dbline 68
 0098           ;       
 0098           ;               //checking if butten is prest 
 0098           ;               if(PRT0DR & 0b00000100) { 
 0098 5D00              mov A,REG[0]
 009A 5300              mov [__r0],A
 009C 470004            tst [__r0],4
 009F A016              jz L7
 00A1                   .dbline 70
 00A1           ;                       //switches displaymode betwen 0 and 4
 00A1           ;                       displaymode ++;
 00A1                   .dbline 70
 00A1 7701              inc [X+1]
 00A3 0F0000            adc [X+0],0
 00A6                   .dbline 71
 00A6           ;                       if(displaymode>4)
 00A6 5004              mov A,4
 00A8 1301              sub A,[X+1]
 00AA 5000              mov A,0
 00AC 1B00              sbb A,[X+0]
 00AE D007              jnc L9
 00B0           X1:
 00B0                   .dbline 72
 00B0           ;                       displaymode = 0;
 00B0 560100            mov [X+1],0
 00B3 560000            mov [X+0],0
 00B6           L9:
 00B6                   .dbline 73
 00B6           ;               }
 00B6           L7:
 00B6                   .dbline 76
 00B6           ;                       
 00B6           ;               // get temp and humidity here
 00B6           ;               I2Cm_Start();                           //Initialize I2C
 00B6 10                push X
 00B7 7C0000            xcall _I2Cm_Start
 00BA                   .dbline 77
 00BA           ;               I2Cm_fSendStart( 0x28, 0);      //Send Measuring Request        
 00BA 5700              mov X,0
 00BC 5028              mov A,40
 00BE 7C0000            xcall _I2Cm_fSendStart
 00C1 20                pop X
 00C2 5300              mov [__r0],A
 00C4                   .dbline 78
 00C4           ;               measuring(temperature, humidity); //measure temperature and humidity
 00C4 5A00              mov [__r1],X
 00C6 06002C            add [__r1],44
 00C9 08                push A
 00CA 5100              mov A,[__r1]
 00CC 08                push A
 00CD 5A00              mov [__r1],X
 00CF 060022            add [__r1],34
 00D2 5100              mov A,[__r0]
 00D4 08                push A
 00D5 5100              mov A,[__r1]
 00D7 08                push A
 00D8 7C0000            xcall _measuring
 00DB 38FC              add SP,-4
 00DD                   .dbline 80
 00DD           ;               
 00DD           ;               switch(displaymode) {
 00DD 3D0000            cmp [X+0],0
 00E0 B006              jnz X2
 00E2 3D0100            cmp [X+1],0
 00E5 A02B              jz L13
 00E7           X2:
 00E7 3D0000            cmp [X+0],0
 00EA B006              jnz X3
 00EC 3D0101            cmp [X+1],1
 00EF A054              jz L14
 00F1           X3:
 00F1 3D0000            cmp [X+0],0
 00F4 B006              jnz X4
 00F6 3D0102            cmp [X+1],2
 00F9 A072              jz L15
 00FB           X4:
 00FB 3D0000            cmp [X+0],0
 00FE B006              jnz X5
 0100 3D0103            cmp [X+1],3
 0103 A090              jz L16
 0105           X5:
 0105 3D0000            cmp [X+0],0
 0108 B006              jnz X6
 010A 3D0104            cmp [X+1],4
 010D A0A3              jz L17
 010F           X6:
 010F 80BE              xjmp L11
 0111           L13:
 0111                   .dbline 82
 0111           ;                       case 0:
 0111           ;                               overview(lcdFirstLine, lcdSecondLine, temperature, humidity);
 0111 5A00              mov [__r1],X
 0113 06002C            add [__r1],44
 0116 5100              mov A,[__r0]
 0118 08                push A
 0119 5100              mov A,[__r1]
 011B 08                push A
 011C 5A00              mov [__r1],X
 011E 060022            add [__r1],34
 0121 5100              mov A,[__r0]
 0123 08                push A
 0124 5100              mov A,[__r1]
 0126 08                push A
 0127 5A00              mov [__r1],X
 0129 060012            add [__r1],18
 012C 5100              mov A,[__r0]
 012E 08                push A
 012F 5100              mov A,[__r1]
 0131 08                push A
 0132 5A00              mov [__r1],X
 0134 060002            add [__r1],2
 0137 5100              mov A,[__r0]
 0139 08                push A
 013A 5100              mov A,[__r1]
 013C 08                push A
 013D 7C0000            xcall _overview
 0140 38F8              add SP,-8
 0142                   .dbline 83
 0142           ;                               break;
 0142 80BB              xjmp L12
 0144           L14:
 0144                   .dbline 86
 0144           ;                               
 0144           ;                       case 1:
 0144           ;                               printtemp(lcdFirstLine, lcdSecondLine, temperature);  //write temp in the variable for the lcd
 0144 5A00              mov [__r1],X
 0146 060022            add [__r1],34
 0149 5100              mov A,[__r0]
 014B 08                push A
 014C 5100              mov A,[__r1]
 014E 08                push A
 014F 5A00              mov [__r1],X
 0151 060012            add [__r1],18
 0154 5100              mov A,[__r0]
 0156 08                push A
 0157 5100              mov A,[__r1]
 0159 08                push A
 015A 5A00              mov [__r1],X
 015C 060002            add [__r1],2
 015F 5100              mov A,[__r0]
 0161 08                push A
 0162 5100              mov A,[__r1]
 0164 08                push A
 0165 7C0000            xcall _printtemp
 0168 38FA              add SP,-6
 016A                   .dbline 87
 016A           ;                               break;
 016A 8093              xjmp L12
 016C           L15:
 016C                   .dbline 90
 016C           ;                               
 016C           ;                       case 2:
 016C           ;                               printhum(lcdFirstLine, lcdSecondLine, humidity);  //wirte humidity in the variable for the lcd
 016C 5A00              mov [__r1],X
 016E 06002C            add [__r1],44
 0171 5100              mov A,[__r0]
 0173 08                push A
 0174 5100              mov A,[__r1]
 0176 08                push A
 0177 5A00              mov [__r1],X
 0179 060012            add [__r1],18
 017C 5100              mov A,[__r0]
 017E 08                push A
 017F 5100              mov A,[__r1]
 0181 08                push A
 0182 5A00              mov [__r1],X
 0184 060002            add [__r1],2
 0187 5100              mov A,[__r0]
 0189 08                push A
 018A 5100              mov A,[__r1]
 018C 08                push A
 018D 7C0000            xcall _printhum
 0190 38FA              add SP,-6
 0192                   .dbline 91
 0192           ;                               break;
 0192 806B              xjmp L12
 0194           L16:
 0194                   .dbline 94
 0194           ;                               
 0194           ;                       case 3:
 0194           ;                               sunsensor(lcdFirstLine, lcdSecondLine); // is it day or night and is it rainy?
 0194 5A00              mov [__r1],X
 0196 060012            add [__r1],18
 0199 5100              mov A,[__r0]
 019B 08                push A
 019C 5100              mov A,[__r1]
 019E 08                push A
 019F 5A00              mov [__r1],X
 01A1 060002            add [__r1],2
 01A4 5100              mov A,[__r0]
 01A6 08                push A
 01A7 5100              mov A,[__r1]
 01A9 08                push A
 01AA 7C0000            xcall _sunsensor
 01AD 38FC              add SP,-4
 01AF                   .dbline 95
 01AF           ;                               break;
 01AF 804E              xjmp L12
 01B1           L17:
 01B1                   .dbline 98
 01B1           ;                               
 01B1           ;                       case 4:
 01B1           ;                               windsensor(lcdFirstLine, lcdSecondLine); // write windspeed here
 01B1 5A00              mov [__r1],X
 01B3 060012            add [__r1],18
 01B6 5100              mov A,[__r0]
 01B8 08                push A
 01B9 5100              mov A,[__r1]
 01BB 08                push A
 01BC 5A00              mov [__r1],X
 01BE 060002            add [__r1],2
 01C1 5100              mov A,[__r0]
 01C3 08                push A
 01C4 5100              mov A,[__r1]
 01C6 08                push A
 01C7 7C0000            xcall _windsensor
 01CA 38FC              add SP,-4
 01CC                   .dbline 99
 01CC           ;                               break;
 01CC 8031              xjmp L12
 01CE           L11:
 01CE                   .dbline 102
 01CE           ;               
 01CE           ;                       default:
 01CE           ;                               displaymode = 0;
 01CE 560100            mov [X+1],0
 01D1 560000            mov [X+0],0
 01D4                   .dbline 103
 01D4           ;                               csprintf(lcdFirstLine,"     Error      ");
 01D4 5011              mov A,>L18
 01D6 08                push A
 01D7 5011              mov A,<L18
 01D9 08                push A
 01DA 5A00              mov [__r1],X
 01DC 060002            add [__r1],2
 01DF 5100              mov A,[__r0]
 01E1 08                push A
 01E2 5100              mov A,[__r1]
 01E4 08                push A
 01E5 7C0000            xcall _csprintf
 01E8                   .dbline 104
 01E8           ;                               csprintf(lcdSecondLine,"                ");
 01E8 5000              mov A,>L19
 01EA 08                push A
 01EB 5000              mov A,<L19
 01ED 08                push A
 01EE 5A00              mov [__r1],X
 01F0 060012            add [__r1],18
 01F3 5100              mov A,[__r0]
 01F5 08                push A
 01F6 5100              mov A,[__r1]
 01F8 08                push A
 01F9 7C0000            xcall _csprintf
 01FC 38F8              add SP,-8
 01FE                   .dbline 105
 01FE           ;               }
 01FE           L12:
 01FE                   .dbline 108
 01FE           ;               
 01FE           ;               // lets see what we've got
 01FE           ;               LCD_Position(0,0);
 01FE 10                push X
 01FF 5000              mov A,0
 0201 5700              mov X,0
 0203 7C0000            xcall _LCD_Position
 0206 20                pop X
 0207                   .dbline 109
 0207           ;               LCD_PrString(lcdFirstLine);
 0207 5A00              mov [__r1],X
 0209 060002            add [__r1],2
 020C 10                push X
 020D 5100              mov A,[__r0]
 020F 08                push A
 0210 5100              mov A,[__r1]
 0212 5C                mov X,A
 0213 18                pop A
 0214 7C0000            xcall _LCD_PrString
 0217                   .dbline 110
 0217           ;               LCD_Position(1,0);
 0217 5700              mov X,0
 0219 5001              mov A,1
 021B 7C0000            xcall _LCD_Position
 021E 20                pop X
 021F                   .dbline 111
 021F           ;               LCD_PrString(lcdSecondLine);
 021F 5A00              mov [__r1],X
 0221 060012            add [__r1],18
 0224 10                push X
 0225 5100              mov A,[__r0]
 0227 08                push A
 0228 5100              mov A,[__r1]
 022A 5C                mov X,A
 022B 18                pop A
 022C 7C0000            xcall _LCD_PrString
 022F                   .dbline 114
 022F           ;               
 022F           ;               // lets sleep for a while
 022F           ;               SleepTimer_SyncWait(8, SleepTimer_WAIT_RELOAD);
 022F 5700              mov X,0
 0231 5008              mov A,8
 0233 7C0000            xcall _SleepTimer_SyncWait
 0236 20                pop X
 0237                   .dbline 115
 0237           ;       }
 0237           L5:
 0237                   .dbline 65
 0237 8E60              xjmp L4
 0239           X0:
 0239                   .dbline -2
 0239           L1:
 0239 38CA              add SP,-54
 023B 20                pop X
 023C                   .dbline 0 ; func end
 023C 8FFF              jmp .
 023E                   .dbsym l humidity 44 A[10:5]I
 023E                   .dbsym l temperature 34 A[10:5]I
 023E                   .dbsym l lcdSecondLine 18 A[16:16]c
 023E                   .dbsym l lcdFirstLine 2 A[16:16]c
 023E                   .dbsym l displaymode 0 i
 023E                   .dbend
                        .area lit(rom, con, rel, lit)
 0000           L19:
 0000 20202020202020202020202020202020  .byte 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
 0010 00                .byte 0
 0011           L18:
 0011 20202020204572726F72202020202020  .byte 32,32,32,32,32,'E,'r,'r,'o,'r,32,32,32,32,32,32
 0021 00                .byte 0
 0022           L3:
 0022 205765617468657273746174696F6E20  .byte 32,'W,'e,'a,'t,'h,'e,'r,'s,'t,'a,'t,'i,'o,'n,32
 0032 00                .byte 0
 0033           L2:
 0033 20202057656C636F6D6520746F202020  .byte 32,32,32,'W,'e,'l,'c,'o,'m,'e,32,'t,'o,32,32,32
 0043 00                .byte 0
