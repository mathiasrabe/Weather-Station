                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATHIA~1\DOCUME~1\PSOCDE~1.2PR\WEATHE~1\WEATHE~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;  lcdSecondLine -> X+18
 0000           ;   lcdFirstLine -> X+2
 0000           ;    displaymode -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3822              add SP,34
 0004                   .dbline 35
 0004           ; //----------------------------------------------------------------------------
 0004           ; // Ports:
 0004           ; // P0_0 = MCLK
 0004           ; // P0_1 = XCLR adc reset
 0004           ; // P0_2 = Button SW
 0004           ; // P0_3 = windspeed input
 0004           ; // P0_4 = sunlight (solar) input
 0004           ; // P0_5 = rainsensor input
 0004           ; // P0_6 = I2C SDA
 0004           ; // P0_7 = I2C SCL
 0004           ; // P1_0 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P1_1 = Gray Code
 0004           ; // P2 = LCD
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #define LCD_LENGTH 16 // 16 plus \0 termination?
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; #include "sunsensor.h"
 0004           ; #include "windspeed.h"
 0004           ; /*
 0004           ; typedef enum {
 0004           ;       overview = 0,
 0004           ;       temp = 1,
 0004           ;       humidity = 2,
 0004           ;       rain = 3,
 0004           ;       wind = 4,
 0004           ; } MODE;*/
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 38
 0004           ;       //Variables
 0004           ;       char lcdFirstLine[LCD_LENGTH], lcdSecondLine[LCD_LENGTH];
 0004           ;       unsigned int displaymode = 0;
 0004 560100            mov [X+1],0
 0007 560000            mov [X+0],0
 000A                   .dbline 43
 000A           ;       
 000A           ;       /** init **/
 000A           ;       
 000A           ;       // interrupt and SleepTimer init
 000A           ;       M8C_EnableGInt ;                            // Turn on interrupts
 000A 7101                      or  F, 01h
 000C           
 000C                   .dbline 44
 000C           ;       SleepTimer_Start();
 000C 10                push X
 000D 7C0000            xcall _SleepTimer_Start
 0010                   .dbline 45
 0010           ;       SleepTimer_SetInterval(SleepTimer_8_HZ);    // Set interrupt to a
 0010 5010              mov A,16
 0012 7C0000            xcall _SleepTimer_SetInterval
 0015                   .dbline 46
 0015           ;       SleepTimer_EnableInt();                     // 8 Hz rate
 0015 7C0000            xcall _SleepTimer_EnableInt
 0018                   .dbline 49
 0018           ;       
 0018           ;       // init PGA and SAR6 for sun and rain sensor
 0018           ;       PGA_sun_SetGain(PGA_sun_G5_33);  // gain of 5,33
 0018 5028              mov A,40
 001A 7C0000            xcall _PGA_sun_SetGain
 001D                   .dbline 50
 001D           ;       PGA_sun_Start(PGA_sun_HIGHPOWER);
 001D 5003              mov A,3
 001F 7C0000            xcall _PGA_sun_Start
 0022                   .dbline 51
 0022           ;       SAR6_sun_Start(SAR6_sun_HIGHPOWER);
 0022 5003              mov A,3
 0024 7C0000            xcall _SAR6_sun_Start
 0027                   .dbline 54
 0027           ;       
 0027           ;       // init PGA and SAR6 for windsensor
 0027           ;       PGA_wind_SetGain(PGA_wind_G5_33);  // gain of 5,33
 0027 5028              mov A,40
 0029 7C0000            xcall _PGA_wind_SetGain
 002C                   .dbline 55
 002C           ;       PGA_wind_Start(PGA_wind_HIGHPOWER);
 002C 5003              mov A,3
 002E 7C0000            xcall _PGA_wind_Start
 0031                   .dbline 56
 0031           ;       SAR6_wind_Start(SAR6_wind_HIGHPOWER);
 0031 5003              mov A,3
 0033 7C0000            xcall _SAR6_wind_Start
 0036                   .dbline 59
 0036           ; 
 0036           ;       // LCD init
 0036           ;       LCD_Init();
 0036 7C0000            xcall _LCD_Init
 0039 20                pop X
 003A                   .dbline 62
 003A           ;       
 003A           ;       // print welcome screen to LCD
 003A           ;       csprintf(lcdFirstLine,"   Welcome to   ");
 003A 5033              mov A,>L2
 003C 08                push A
 003D 5033              mov A,<L2
 003F 08                push A
 0040 5A00              mov [__r1],X
 0042 060002            add [__r1],2
 0045 5100              mov A,[__r0]
 0047 08                push A
 0048 5100              mov A,[__r1]
 004A 08                push A
 004B 7C0000            xcall _csprintf
 004E                   .dbline 63
 004E           ;       csprintf(lcdSecondLine, " Weatherstation ");
 004E 5022              mov A,>L3
 0050 08                push A
 0051 5022              mov A,<L3
 0053 08                push A
 0054 5A00              mov [__r1],X
 0056 060012            add [__r1],18
 0059 5100              mov A,[__r0]
 005B 08                push A
 005C 5100              mov A,[__r1]
 005E 08                push A
 005F 7C0000            xcall _csprintf
 0062 38F8              add SP,-8
 0064                   .dbline 64
 0064           ;       LCD_Position(0,0);
 0064 10                push X
 0065 5000              mov A,0
 0067 5700              mov X,0
 0069 7C0000            xcall _LCD_Position
 006C 20                pop X
 006D                   .dbline 65
 006D           ;       LCD_PrString(lcdFirstLine);
 006D 5A00              mov [__r1],X
 006F 060002            add [__r1],2
 0072 10                push X
 0073 5100              mov A,[__r0]
 0075 08                push A
 0076 5100              mov A,[__r1]
 0078 5C                mov X,A
 0079 18                pop A
 007A 7C0000            xcall _LCD_PrString
 007D                   .dbline 66
 007D           ;       LCD_Position(1,0);
 007D 5700              mov X,0
 007F 5001              mov A,1
 0081 7C0000            xcall _LCD_Position
 0084 20                pop X
 0085                   .dbline 67
 0085           ;       LCD_PrString(lcdSecondLine);
 0085 5A00              mov [__r1],X
 0087 060012            add [__r1],18
 008A 10                push X
 008B 5100              mov A,[__r0]
 008D 08                push A
 008E 5100              mov A,[__r1]
 0090 5C                mov X,A
 0091 18                pop A
 0092 7C0000            xcall _LCD_PrString
 0095 20                pop X
 0096 80F6              xjmp L5
 0098           L4:
 0098                   .dbline 69
 0098           ;       
 0098           ;       while(1) {
 0098                   .dbline 72
 0098           ;       
 0098           ;               //checking if butten is prest 
 0098           ;               if(PRT0DR & 0b00000100) { 
 0098 5D00              mov A,REG[0]
 009A 5300              mov [__r0],A
 009C 470004            tst [__r0],4
 009F A016              jz L7
 00A1                   .dbline 74
 00A1           ;                       //switches displaymode betwen 0 and 4
 00A1           ;                       displaymode ++;
 00A1                   .dbline 74
 00A1 7701              inc [X+1]
 00A3 0F0000            adc [X+0],0
 00A6                   .dbline 75
 00A6           ;                       if(displaymode>4)
 00A6 5004              mov A,4
 00A8 1301              sub A,[X+1]
 00AA 5000              mov A,0
 00AC 1B00              sbb A,[X+0]
 00AE D007              jnc L9
 00B0           X1:
 00B0                   .dbline 76
 00B0           ;                       displaymode = 0;
 00B0 560100            mov [X+1],0
 00B3 560000            mov [X+0],0
 00B6           L9:
 00B6                   .dbline 77
 00B6           ;               }
 00B6           L7:
 00B6                   .dbline 81
 00B6           ;                       
 00B6           ;               // get temp and humidity here
 00B6           ;               
 00B6           ;               switch(displaymode) {
 00B6 3D0000            cmp [X+0],0
 00B9 B006              jnz X2
 00BB 3D0100            cmp [X+1],0
 00BE A095              jz L12
 00C0           X2:
 00C0 3D0000            cmp [X+0],0
 00C3 B006              jnz X3
 00C5 3D0101            cmp [X+1],1
 00C8 A08B              jz L12
 00CA           X3:
 00CA 3D0000            cmp [X+0],0
 00CD B006              jnz X4
 00CF 3D0102            cmp [X+1],2
 00D2 A081              jz L12
 00D4           X4:
 00D4 3D0000            cmp [X+0],0
 00D7 B006              jnz X5
 00D9 3D0103            cmp [X+1],3
 00DC A00D              jz L16
 00DE           X5:
 00DE 3D0000            cmp [X+0],0
 00E1 B006              jnz X6
 00E3 3D0104            cmp [X+1],4
 00E6 A020              jz L17
 00E8           X6:
 00E8 803B              xjmp L11
 00EA           L16:
 00EA                   .dbline 95
 00EA           ;                       case 0:
 00EA           ;                               // overview();
 00EA           ;                               break;
 00EA           ;                               
 00EA           ;                       case 1:
 00EA           ;                               // temp();
 00EA           ;                               break;
 00EA           ;                               
 00EA           ;                       case 2:
 00EA           ;                               // humidity();
 00EA           ;                               break;
 00EA           ;                               
 00EA           ;                       case 3:
 00EA           ;                               sunsensor(lcdFirstLine, lcdSecondLine);
 00EA 5A00              mov [__r1],X
 00EC 060012            add [__r1],18
 00EF 5100              mov A,[__r0]
 00F1 08                push A
 00F2 5100              mov A,[__r1]
 00F4 08                push A
 00F5 5A00              mov [__r1],X
 00F7 060002            add [__r1],2
 00FA 5100              mov A,[__r0]
 00FC 08                push A
 00FD 5100              mov A,[__r1]
 00FF 08                push A
 0100 7C0000            xcall _sunsensor
 0103 38FC              add SP,-4
 0105                   .dbline 96
 0105           ;                               break;
 0105 804E              xjmp L12
 0107           L17:
 0107                   .dbline 99
 0107           ;                               
 0107           ;                       case 4:
 0107           ;                               windsensor(lcdFirstLine, lcdSecondLine);
 0107 5A00              mov [__r1],X
 0109 060012            add [__r1],18
 010C 5100              mov A,[__r0]
 010E 08                push A
 010F 5100              mov A,[__r1]
 0111 08                push A
 0112 5A00              mov [__r1],X
 0114 060002            add [__r1],2
 0117 5100              mov A,[__r0]
 0119 08                push A
 011A 5100              mov A,[__r1]
 011C 08                push A
 011D 7C0000            xcall _windsensor
 0120 38FC              add SP,-4
 0122                   .dbline 100
 0122           ;                               break;
 0122 8031              xjmp L12
 0124           L11:
 0124                   .dbline 103
 0124           ;               
 0124           ;                       default:
 0124           ;                               displaymode = 0;
 0124 560100            mov [X+1],0
 0127 560000            mov [X+0],0
 012A                   .dbline 104
 012A           ;                               csprintf(lcdFirstLine,"     Error      ");
 012A 5011              mov A,>L18
 012C 08                push A
 012D 5011              mov A,<L18
 012F 08                push A
 0130 5A00              mov [__r1],X
 0132 060002            add [__r1],2
 0135 5100              mov A,[__r0]
 0137 08                push A
 0138 5100              mov A,[__r1]
 013A 08                push A
 013B 7C0000            xcall _csprintf
 013E                   .dbline 105
 013E           ;                               csprintf(lcdSecondLine,"                ");
 013E 5000              mov A,>L19
 0140 08                push A
 0141 5000              mov A,<L19
 0143 08                push A
 0144 5A00              mov [__r1],X
 0146 060012            add [__r1],18
 0149 5100              mov A,[__r0]
 014B 08                push A
 014C 5100              mov A,[__r1]
 014E 08                push A
 014F 7C0000            xcall _csprintf
 0152 38F8              add SP,-8
 0154                   .dbline 106
 0154           ;               }
 0154           L12:
 0154                   .dbline 109
 0154           ;               
 0154           ;               // lets see what we've got
 0154           ;               LCD_Position(0,0);
 0154 10                push X
 0155 5000              mov A,0
 0157 5700              mov X,0
 0159 7C0000            xcall _LCD_Position
 015C 20                pop X
 015D                   .dbline 110
 015D           ;               LCD_PrString(lcdFirstLine);
 015D 5A00              mov [__r1],X
 015F 060002            add [__r1],2
 0162 10                push X
 0163 5100              mov A,[__r0]
 0165 08                push A
 0166 5100              mov A,[__r1]
 0168 5C                mov X,A
 0169 18                pop A
 016A 7C0000            xcall _LCD_PrString
 016D                   .dbline 111
 016D           ;               LCD_Position(1,0);
 016D 5700              mov X,0
 016F 5001              mov A,1
 0171 7C0000            xcall _LCD_Position
 0174 20                pop X
 0175                   .dbline 112
 0175           ;               LCD_PrString(lcdSecondLine);
 0175 5A00              mov [__r1],X
 0177 060012            add [__r1],18
 017A 10                push X
 017B 5100              mov A,[__r0]
 017D 08                push A
 017E 5100              mov A,[__r1]
 0180 5C                mov X,A
 0181 18                pop A
 0182 7C0000            xcall _LCD_PrString
 0185                   .dbline 115
 0185           ;               
 0185           ;               // lets sleep for a while
 0185           ;               SleepTimer_SyncWait(8, SleepTimer_WAIT_RELOAD);
 0185 5700              mov X,0
 0187 5008              mov A,8
 0189 7C0000            xcall _SleepTimer_SyncWait
 018C 20                pop X
 018D                   .dbline 116
 018D           ;       }
 018D           L5:
 018D                   .dbline 69
 018D 8F0A              xjmp L4
 018F           X0:
 018F                   .dbline -2
 018F           L1:
 018F 38DE              add SP,-34
 0191 20                pop X
 0192                   .dbline 0 ; func end
 0192 8FFF              jmp .
 0194                   .dbsym l lcdSecondLine 18 A[16:16]c
 0194                   .dbsym l lcdFirstLine 2 A[16:16]c
 0194                   .dbsym l displaymode 0 i
 0194                   .dbend
                        .area lit(rom, con, rel, lit)
 0000           L19:
 0000 20202020202020202020202020202020  .byte 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
 0010 00                .byte 0
 0011           L18:
 0011 20202020204572726F72202020202020  .byte 32,32,32,32,32,'E,'r,'r,'o,'r,32,32,32,32,32,32
 0021 00                .byte 0
 0022           L3:
 0022 205765617468657273746174696F6E20  .byte 32,'W,'e,'a,'t,'h,'e,'r,'s,'t,'a,'t,'i,'o,'n,32
 0032 00                .byte 0
 0033           L2:
 0033 20202057656C636F6D6520746F202020  .byte 32,32,32,'W,'e,'l,'c,'o,'m,'e,32,'t,'o,32,32,32
 0043 00                .byte 0
